cabal-version: >= 1.10
name:          @PACKAGE_NAME@
build-type:    Custom
version:       @VERSION@
license:       GPL-2
license-file:  COPYING
category:      Compiler
author:        John Meacham <john@repetae.net>
maintainer:    Kiwamu Okabe <kiwamu@debian.or.jp>
synopsis:      Haskell compiler that produce binary through C language
description:   Ajhc is a fork of jhc.
               The jhc is a haskell compiler which aims to produce the most efficient
               programs possible via whole program analysis and other optimizations.
               .
               The jhc is very minimalist in that it does not have a precompiled run time
               system, but rather generates what is needed as part of the compilation
               process. However, back ends do have specific run-time representations of
               data, which can be affected by things like the choice of garbage collector.
               .
               Perhaps you can get internal overview with following compile flow image:
               .
               .
               <<https://raw.github.com/ajhc/ajhc/arafura/docs/jhc_compile_flow.png>>
homepage:      http://ajhc.metasepi.org/

data-files:    README.md

extra-source-files:
    examples/*.hs rts/HsFFI.h Makefile.cabalinst library_deps.make src/data/targets.ini
    src/StringTable/StringTable_cbits.h src/cbits/config.h src/hs_src_config.h
    src/data/Typeable.h utils/build_extlibs.prl
    @JHCLIB_FILES@

source-repository head
    type:     git
    location: https://github.com/ajhc/ajhc.git

library
    hs-source-dirs: drift_processed src
    default-language: Haskell98

    c-sources:
        src/StringTable/StringTable_cbits.c
        src/cbits/md5sum.c
        src/cbits/lookup3.c

    include-dirs:
        src/data, src/StringTable, src/cbits, src

    build-depends:
        base >= 4.0 && < 5,
        HsSyck,
        array,
        binary,
        bytestring,
        containers,
        directory,
        fgl,
        filepath,
        haskeline,
        mtl,
        old-time,
        pretty,
        process,
        random,
        regex-compat,
        syb,
        temporary,
        utf8-string,
        zlib

    if os(windows)
        build-depends: Win32
    else
        build-depends: unix

    exposed-modules:
        C.FFI
        C.FromGrin2
        C.Prims
        Cmm.Number
        DataConstructors
        Doc.DocLike
        Doc.Pretty
        E.Main
        E.Program
        E.Rules
        E.Type
        FlagDump
        FrontEnd.Class
        FrontEnd.Exports
        FrontEnd.HsSyn
        FrontEnd.Infix
        FrontEnd.KindInfer
        FrontEnd.Rename
        FrontEnd.Representation
        FrontEnd.SrcLoc
        FrontEnd.Tc.Kind
        FrontEnd.Tc.Module
        FrontEnd.Tc.Type
        FrontEnd.TypeSynonyms
        FrontEnd.Warning
        Grin.FromE
        Grin.Grin
        Grin.Main
        Grin.Show
        Ho.Build
        Ho.Collected
        Ho.Library
        Ho.Type
        Info.Info
        Info.Types
        Interactive
        Name.Id
        Name.Name
        Options
        PackedString
        Stats
        StringTable.Atom
        Support.CFF
        Support.TempDir
        Util.BitSet
        Util.GMap
        Util.Gen
        Util.HasSize
        Util.Perhaps
        Util.SHA1
        Util.SetLike
        Version.Version

    other-modules:
        C.Generate
        Cmm.Op
        Cmm.OpEval
        DerivingDrift.DataP
        DerivingDrift.Drift
        DerivingDrift.RuleUtils
        DerivingDrift.StandardRules
        Doc.Attr
        Doc.Chars
        Doc.PPrint
        E.Annotate
        E.Arbitrary
        E.Binary
        E.CPR
        E.Demand
        E.Diff
        E.E
        E.Eta
        E.Eval
        E.FreeVars
        E.FromHs
        E.Inline
        E.LambdaLift
        E.LetFloat
        E.Lint
        E.PrimDecode
        E.PrimOpt
        E.SSimplify
        E.Show
        E.Subst
        E.Traverse
        E.TypeAnalysis
        E.TypeCheck
        E.Values
        E.WorkerWrapper
        FindFixpoint
        Fixer.Fixer
        Fixer.Supply
        Fixer.VMap
        FlagOpts
        FrontEnd.DataConsAssump
        FrontEnd.DeclsDepends
        FrontEnd.DependAnalysis
        FrontEnd.Desugar
        FrontEnd.Diagnostic
        FrontEnd.FrontEnd
        FrontEnd.HsErrors
        FrontEnd.HsParser
        FrontEnd.HsPretty
        FrontEnd.Lexer
        FrontEnd.ParseMonad
        FrontEnd.ParseUtils
        FrontEnd.Syn.Options
        FrontEnd.Syn.Traverse
        FrontEnd.Tc.Class
        FrontEnd.Tc.Main
        FrontEnd.Tc.Monad
        FrontEnd.Tc.Unify
        FrontEnd.TypeSigs
        FrontEnd.TypeSyns
        FrontEnd.Unlit
        FrontEnd.Utils
        GenUtil
        Grin.DeadCode
        Grin.Devolve
        Grin.EvalInline
        Grin.HashConst
        Grin.Lint
        Grin.NodeAnalyze
        Grin.Noodle
        Grin.Optimize
        Grin.SSimplify
        Grin.StorageAnalysis
        Grin.Val
        Grin.Whiz
        Ho.Binary
        Ho.ReadSource
        Info.Binary
        Info.Properties
        Name.Binary
        Name.Names
        Name.Prim
        Name.VConsts
        RawFiles
        Support.Cabal
        Support.CanType
        Support.Compat
        Support.CompatMingw32
        Support.FreeVars
        Support.IniParse
        Support.MD5
        Support.MapBinaryInstance
        Support.Tickle
        Support.Transform
        Support.Tuple
        Support.Unparse
        Util.ContextMonad
        Util.ExitCodes
        Util.FilterInput
        Util.Graph
        Util.Graphviz
        Util.Histogram
        Util.Inst
        Util.IntBag
        Util.Interact
        Util.NameMonad
        Util.Once
        Util.Progress
        Util.RWS
        Util.ReaderWriter
        Util.Relation
        Util.SameShape
        Util.Seq
        Util.TrueSet
        Util.UnionFind
        Util.UnionSolve
        Util.UniqueMonad
        Util.Util
        Util.VarName
        Util.YAML
        Version.Config
        Paths_@PACKAGE_NAME@

    default-extensions:
        BangPatterns, TypeFamilies, ViewPatterns, UndecidableInstances,
        OverlappingInstances, RecordWildCards, RecursiveDo, TupleSections,
        ParallelListComp, GeneralizedNewtypeDeriving, ScopedTypeVariables,
        FlexibleInstances, TypeSynonymInstances, MultiParamTypeClasses,
        DeriveDataTypeable, NoMonoLocalBinds, NamedFieldPuns,
        ForeignFunctionInterface, UnliftedFFITypes, ImplicitParams,
        UnboxedTuples, StandaloneDeriving, DeriveFunctor, DeriveFoldable,
        DeriveTraversable, FlexibleContexts,
        ConstrainedClassMethods, FunctionalDependencies, MagicHash,
        PolymorphicComponents, ExistentialQuantification, UnicodeSyntax,
        PostfixOperators, PatternGuards, LiberalTypeSynonyms, RankNTypes,
        TypeOperators, EmptyDataDecls, KindSignatures

    ghc-options:    -W -fno-warn-unused-matches  -fwarn-type-defaults -i./drift_processed -i./src
    cc-options:     -std=c99
    cpp-options:    -DUSE_HASKELINE -DWITH_CABAL

executable @PACKAGE_NAME@
    main-is:        Main.hs
    hs-source-dirs: src_main
    default-language: Haskell98

    build-depends:
        base >= 4.0 && < 5,
        HsSyck,
        array,
        binary,
        bytestring,
        containers,
        directory,
        fgl,
        filepath,
        haskeline,
        mtl,
        old-time,
        pretty,
        process,
        random,
        regex-compat,
        syb,
        temporary,
        utf8-string,
        zlib,
        @PACKAGE_NAME@

    if os(windows)
        build-depends: Win32
    else
        build-depends: unix

    ghc-options:    -W -fno-warn-unused-matches  -fwarn-type-defaults
    cc-options:     -std=c99
    cpp-options:    -DUSE_HASKELINE -DWITH_CABAL

executable jahm
    main-is:        Main.hs
    hs-source-dirs: src_jahm
    default-language: Haskell98

    build-depends:
        base >= 4.0 && < 5,
        HTTP,
        bytestring,
        filepath,
        network,
        pretty,
        process,
        directory

  if !os(windows)
    build-depends:
        unix

    other-modules:
        Distribution.Client.HttpUtils
        Distribution.Compat.CopyFile
        Distribution.Compat.Exception
        Distribution.Compat.TempFile
        Distribution.Simple.Utils
        Distribution.Text
        Distribution.Verbosity
